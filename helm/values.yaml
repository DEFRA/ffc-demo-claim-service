environment: development
postgresUsername: postgres@mine-support2
postgresPassword: changeme
postgresDatabase: mine_claims
postgresHost:  mine-support-claims-postgres
postgresServiceName:  mine-support-claims-postgres
postgresExternalName: host.docker.internal
postgresPort: 5432
name: mine-support-claim-service
image: mine-support-claim-service
imagePullSecret:
service:
  type: ClusterIP
  port: 80
container:
  imagePullPolicy: IfNotPresent
  redeployOnChange: update this field to force a change
  requestMemory: 60Mi
  requestCpu: 60m
  limitMemory: 120Mi
  limitCpu: 120m
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  restartPolicy: Always
  command: ["/bin/sh","-c"]
  args: ["scripts/wait-for/wait-for $(POSTGRES_HOST):5432 -- npm --no-update-notifier run migrate && node index"]
  messageQueueHost: mine-support-artemis
  messageQueuePort: 5672
  messageQueueTransport: tcp
  calculationQueueAddress: calculation
  calculationQueueUser: artemis
  calculationQueuePassword: artemis
  scheduleQueueAddress: schedule
  scheduleQueueUser: artemis
  scheduleQueuePassword: artemis
replicaCount: 1
minReadySeconds: 10
maxSurge: 1
maxUnavailable: 1
livenessProbe:
  path: /healthz
  port: 3003
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 3
readinessProbe:
  path: /healthy
  port: 3003
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 3
